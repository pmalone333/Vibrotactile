function makeSpatialLocFigs(sub,cfg)
    
    % patrick malone pmalone333@gmail.com 11/23/15
    % passed args: sub must be string (i.e '900' for subj 900), if
    % cfg isn't passed it is created using config_subjects_VT.m 
    
    if exist('cfg','var') % if cfg was passed, use it; else, create one
        cfg = config_subjects_VT(cfg);
    else
        cfg = config_subjects_VT;
    end
    
    % change preTrain to post for post training figs
    data_path = dir(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc'));
    load(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc',data_path(3).name));

    %% plot overall accuracy by block
    plot([mean(trialOutput(1).accuracy) mean(trialOutput(2).accuracy) mean(trialOutput(3).accuracy) ...
          mean(trialOutput(4).accuracy) mean(trialOutput(5).accuracy) mean(trialOutput(6).accuracy) ...
          mean(trialOutput(7).accuracy)]);
    xlabel('Block');
    ylabel('Accuracy');
    title(['Sub ' sub ' overall acc']);
    print(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc',['sub' sub '_spatialLoc_OverallBlockAcc']),'-dpng');
    
    %% plot accuracy by freq
    % plot low freq by block 
    plot([mean(trialOutput(1).accuracy(floor(trialOutput(1).stimuli(2,:)) == 26)) mean(trialOutput(2).accuracy(floor(trialOutput(2).stimuli(2,:)) == 26)) ...
          mean(trialOutput(3).accuracy(floor(trialOutput(3).stimuli(2,:)) == 26)) mean(trialOutput(4).accuracy(floor(trialOutput(4).stimuli(2,:)) == 26)) ... 
          mean(trialOutput(5).accuracy(floor(trialOutput(5).stimuli(2,:)) == 26)) mean(trialOutput(6).accuracy(floor(trialOutput(6).stimuli(2,:)) == 26)) ... 
          mean(trialOutput(7).accuracy(floor(trialOutput(7).stimuli(2,:)) == 26))])
    xlabel('Block');
    ylabel('Accuracy');
    title(['Sub ' sub ' low freq acc']);
    print(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc',['sub' sub '_spatialLoc_lowFreqBlockAcc']),'-dpng');
    
    % plot high freq by block 
    plot([mean(trialOutput(1).accuracy(floor(trialOutput(1).stimuli(2,:)) == 93)) mean(trialOutput(2).accuracy(floor(trialOutput(2).stimuli(2,:)) == 93)) ...
          mean(trialOutput(3).accuracy(floor(trialOutput(3).stimuli(2,:)) == 93)) mean(trialOutput(4).accuracy(floor(trialOutput(4).stimuli(2,:)) == 93)) ... 
          mean(trialOutput(5).accuracy(floor(trialOutput(5).stimuli(2,:)) == 93)) mean(trialOutput(6).accuracy(floor(trialOutput(6).stimuli(2,:)) == 93)) ... 
          mean(trialOutput(7).accuracy(floor(trialOutput(7).stimuli(2,:)) == 93))])
    xlabel('Block');
    ylabel('Accuracy');
    title(['Sub ' sub ' high freq acc']);
    print(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc',['sub' sub '_spatialLoc_highFreqBlockAcc']),'-dpng');
    
    %% same condition - plot by channel
    pos2 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 2 & trialOutput(1).stimuli(3,:) == 2) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 2 & trialOutput(2).stimuli(3,:) == 2) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 2 & trialOutput(3).stimuli(3,:) == 2) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 2 & trialOutput(4).stimuli(3,:) == 2) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 2 & trialOutput(5).stimuli(3,:) == 2) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 2 & trialOutput(6).stimuli(3,:) == 2) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 2 & trialOutput(7).stimuli(3,:) == 2)]);
    pos4 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 4 & trialOutput(1).stimuli(3,:) == 4) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 4 & trialOutput(2).stimuli(3,:) == 4) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 4 & trialOutput(3).stimuli(3,:) == 4) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 4 & trialOutput(4).stimuli(3,:) == 4) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 4 & trialOutput(5).stimuli(3,:) == 4) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 4 & trialOutput(6).stimuli(3,:) == 4) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 4 & trialOutput(7).stimuli(3,:) == 4)]);
    pos6 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 6 & trialOutput(1).stimuli(3,:) == 6) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 6 & trialOutput(2).stimuli(3,:) == 6) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 6 & trialOutput(3).stimuli(3,:) == 6) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 6 & trialOutput(4).stimuli(3,:) == 6) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 6 & trialOutput(5).stimuli(3,:) == 6) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 6 & trialOutput(6).stimuli(3,:) == 6) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 6 & trialOutput(7).stimuli(3,:) == 6)]);
    pos10 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 10 & trialOutput(1).stimuli(3,:) == 10) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 10 & trialOutput(2).stimuli(3,:) == 10) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 10 & trialOutput(3).stimuli(3,:) == 10) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 10 & trialOutput(4).stimuli(3,:) == 10) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 10 & trialOutput(5).stimuli(3,:) == 10) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 10 & trialOutput(6).stimuli(3,:) == 10) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 10 & trialOutput(7).stimuli(3,:) == 10)]);
    pos12 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 12 & trialOutput(1).stimuli(3,:) == 12) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 12 & trialOutput(2).stimuli(3,:) == 12) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 12 & trialOutput(3).stimuli(3,:) == 12) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 12 & trialOutput(4).stimuli(3,:) == 12) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 12 & trialOutput(5).stimuli(3,:) == 12) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 12 & trialOutput(6).stimuli(3,:) == 12) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 12 & trialOutput(7).stimuli(3,:) == 12)]);
    pos14 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 14 & trialOutput(1).stimuli(3,:) == 14) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 14 & trialOutput(2).stimuli(3,:) == 14) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 14 & trialOutput(3).stimuli(3,:) == 14) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 14 & trialOutput(4).stimuli(3,:) == 14) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 14 & trialOutput(5).stimuli(3,:) == 14) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 14 & trialOutput(6).stimuli(3,:) == 14) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 14 & trialOutput(7).stimuli(3,:) == 14)]);
    bar([pos2 pos4 pos6 pos10 pos12 pos14])
    xlabel('Position');
    ylabel('Accuracy');
    title(['Sub ' sub ' same condition acc by position']);
    set(gca,'XTickLabel',[2 4 6 10 12 14])
    print(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc',['sub' sub '_spatialLoc_sameCondByPos']),'-dpng');
    
    %% diff condition - plot by position pair 
    pos2_4 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 2 & trialOutput(1).stimuli(3,:) == 4) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 2 & trialOutput(2).stimuli(3,:) == 4) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 2 & trialOutput(3).stimuli(3,:) == 4) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 2 & trialOutput(4).stimuli(3,:) == 4) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 2 & trialOutput(5).stimuli(3,:) == 4) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 2 & trialOutput(6).stimuli(3,:) == 4) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 2 & trialOutput(7).stimuli(3,:) == 4) ... 
           trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 4 & trialOutput(1).stimuli(3,:) == 2) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 4 & trialOutput(2).stimuli(3,:) == 2) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 4 & trialOutput(3).stimuli(3,:) == 2) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 4 & trialOutput(4).stimuli(3,:) == 2) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 4 & trialOutput(5).stimuli(3,:) == 2) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 4 & trialOutput(6).stimuli(3,:) == 2) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 4 & trialOutput(7).stimuli(3,:) == 2)]);
    pos2_6 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 2 & trialOutput(1).stimuli(3,:) == 6) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 2 & trialOutput(2).stimuli(3,:) == 6) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 2 & trialOutput(3).stimuli(3,:) == 6) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 2 & trialOutput(4).stimuli(3,:) == 6) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 2 & trialOutput(5).stimuli(3,:) == 6) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 2 & trialOutput(6).stimuli(3,:) == 6) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 2 & trialOutput(7).stimuli(3,:) == 6) ... 
           trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 6 & trialOutput(1).stimuli(3,:) == 2) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 6 & trialOutput(2).stimuli(3,:) == 2) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 6 & trialOutput(3).stimuli(3,:) == 2) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 6 & trialOutput(4).stimuli(3,:) == 2) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 6 & trialOutput(5).stimuli(3,:) == 2) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 6 & trialOutput(6).stimuli(3,:) == 2) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 6 & trialOutput(7).stimuli(3,:) == 2)]);
    % why no reverse positions for 2 and 10?
    pos2_10 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 2 & trialOutput(1).stimuli(3,:) == 10) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 2 & trialOutput(2).stimuli(3,:) == 10) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 2 & trialOutput(3).stimuli(3,:) == 10) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 2 & trialOutput(4).stimuli(3,:) == 10) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 2 & trialOutput(5).stimuli(3,:) == 10) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 2 & trialOutput(6).stimuli(3,:) == 10) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 2 & trialOutput(7).stimuli(3,:) == 10)]);
    pos4_10 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 4 & trialOutput(1).stimuli(3,:) == 10) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 4 & trialOutput(2).stimuli(3,:) == 10) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 4 & trialOutput(3).stimuli(3,:) == 10) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 4 & trialOutput(4).stimuli(3,:) == 10) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 4 & trialOutput(5).stimuli(3,:) == 10) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 4 & trialOutput(6).stimuli(3,:) == 10) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 4 & trialOutput(7).stimuli(3,:) == 10)]);
    pos6_10 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 6 & trialOutput(1).stimuli(3,:) == 10) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 6 & trialOutput(2).stimuli(3,:) == 10) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 6 & trialOutput(3).stimuli(3,:) == 10) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 6 & trialOutput(4).stimuli(3,:) == 10) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 6 & trialOutput(5).stimuli(3,:) == 10) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 6 & trialOutput(6).stimuli(3,:) == 10) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 6 & trialOutput(7).stimuli(3,:) == 10) ... 
           trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 10 & trialOutput(1).stimuli(3,:) == 6) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 10 & trialOutput(2).stimuli(3,:) == 6) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 10 & trialOutput(3).stimuli(3,:) == 6) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 10 & trialOutput(4).stimuli(3,:) == 6) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 10 & trialOutput(5).stimuli(3,:) == 6) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 10 & trialOutput(6).stimuli(3,:) == 6) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 10 & trialOutput(7).stimuli(3,:) == 6)]);
    pos10_12 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 10 & trialOutput(1).stimuli(3,:) == 12) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 10 & trialOutput(2).stimuli(3,:) == 12) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 10 & trialOutput(3).stimuli(3,:) == 12) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 10 & trialOutput(4).stimuli(3,:) == 12) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 10 & trialOutput(5).stimuli(3,:) == 12) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 10 & trialOutput(6).stimuli(3,:) == 12) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 10 & trialOutput(7).stimuli(3,:) == 12) ... 
           trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 12 & trialOutput(1).stimuli(3,:) == 10) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 12 & trialOutput(2).stimuli(3,:) == 10) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 12 & trialOutput(3).stimuli(3,:) == 10) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 12 & trialOutput(4).stimuli(3,:) == 10) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 12 & trialOutput(5).stimuli(3,:) == 10) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 12 & trialOutput(6).stimuli(3,:) == 10) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 12 & trialOutput(7).stimuli(3,:) == 10)]);
    pos10_14 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 10 & trialOutput(1).stimuli(3,:) == 14) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 10 & trialOutput(2).stimuli(3,:) == 14) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 10 & trialOutput(3).stimuli(3,:) == 14) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 10 & trialOutput(4).stimuli(3,:) == 14) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 10 & trialOutput(5).stimuli(3,:) == 14) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 10 & trialOutput(6).stimuli(3,:) == 14) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 10 & trialOutput(7).stimuli(3,:) == 14) ... 
           trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 14 & trialOutput(1).stimuli(3,:) == 10) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 14 & trialOutput(2).stimuli(3,:) == 10) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 14 & trialOutput(3).stimuli(3,:) == 10) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 14 & trialOutput(4).stimuli(3,:) == 10) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 14 & trialOutput(5).stimuli(3,:) == 10) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 14 & trialOutput(6).stimuli(3,:) == 10) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 14 & trialOutput(7).stimuli(3,:) == 10)]);
    pos12_14 = mean([trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 12 & trialOutput(1).stimuli(3,:) == 14) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 12 & trialOutput(2).stimuli(3,:) == 14) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 12 & trialOutput(3).stimuli(3,:) == 14) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 12 & trialOutput(4).stimuli(3,:) == 14) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 12 & trialOutput(5).stimuli(3,:) == 14) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 12 & trialOutput(6).stimuli(3,:) == 14) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 12 & trialOutput(7).stimuli(3,:) == 14) ... 
           trialOutput(1).accuracy(trialOutput(1).stimuli(1,:) == 14 & trialOutput(1).stimuli(3,:) == 12) trialOutput(2).accuracy(trialOutput(2).stimuli(1,:) == 14 & trialOutput(2).stimuli(3,:) == 12) ... 
           trialOutput(3).accuracy(trialOutput(3).stimuli(1,:) == 14 & trialOutput(3).stimuli(3,:) == 12) trialOutput(4).accuracy(trialOutput(4).stimuli(1,:) == 14 & trialOutput(4).stimuli(3,:) == 12) ... 
           trialOutput(5).accuracy(trialOutput(5).stimuli(1,:) == 14 & trialOutput(5).stimuli(3,:) == 12) trialOutput(6).accuracy(trialOutput(6).stimuli(1,:) == 14 & trialOutput(6).stimuli(3,:) == 12) ... 
           trialOutput(7).accuracy(trialOutput(7).stimuli(1,:) == 14 & trialOutput(7).stimuli(3,:) == 12)]);
    bar([pos2_4 pos2_6 pos2_10 pos4_10 pos6_10 pos10_12 pos10_14 pos12_14])
    xlabel('Position pair');
    ylabel('Accuracy');
    title(['Sub ' sub ' diff condition acc by position pair']);
    set(gca,'XTickLabel',{'2+4','2+6','2+10','4+10','6+10','10+12','10+14','12+14'})
    print(fullfile(cfg.dirs.behav_dir,sub,'preTrain','spatialLoc',['sub' sub '_spatialLoc_diffCondByPosPair']),'-dpng');
    
end
  