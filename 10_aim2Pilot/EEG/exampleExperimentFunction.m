function trialOutput = exampleExperimentFunction(subjectName,exptdesign)try	Priority(1)		%settings so that Psychtoolbox doesn't display annoying warnings--DON'T CHANGE    oldLevel = Screen('Preference', 'VisualDebugLevel', 1);  %     oldEnableFlag = Screen('Preference', 'SuppressAllWarnings', 1);%     warning off    HideCursor;    WaitSecs(1); % make sure it is loaded into memory;	    % initialize the random number generator	rng('shuffle');    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		INITIALIZE EXPERIMENT%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    % open a screen and display instructions    % Choosing the display with the highest display number is    % a best guess about where you want the stimulus displayed.    screens=Screen('Screens');%     screenNumber=0;    screenNumber=max(screens);    % Open window with default settings:    [w windowRect] =Screen('OpenWindow', screenNumber,[128 128 128]);    white = WhiteIndex(w); % pixel value for white    gray = GrayIndex(w); % pixel value for gray    black = BlackIndex(w); % pixel value for black    font='-misc-fixed-bold-r-normal--13-100-100-100-c-70-iso8859-1';           [o o1]=Screen(w, 'TextFont', font)        %  calculate the center of the screen, for later reference    center = [(windowRect(3)-windowRect(1))/2 (windowRect(4)-windowRect(2))/2];    %  calculate the slack allowed during a flip interval       refresh = Screen('GetFlipInterval',w);    slack = refresh/2;    refresh            slack        % Select specific text font, style and size, unless we're on Linux    % where this combo is not available:    if IsLinux==0        Screen('TextFont',w, 'Courier New');        Screen('TextSize',w, 14);        Screen('TextStyle', w, 1+2);    end;        %% initializes the connection to netstation EEG setup    if exptdesign.netstationPresent        % Connect to Netstation         [status error] = NetStation('Connect', exptdesign.netstationIP)        if status ==1 % there was an error!             ME = MException('NETSTATION:CouldNotConnect', ['Could not connect to Netstation computer at IP ' exptdesign.netstationIP '.  Please check the IP and network connection and try again.\n  Error:' error]);             throw(ME);        end               	% Tell Netstation to synchronize recording        [status error] = NetStation('Synchronize',exptdesign.netstationSyncLimit);        if status ==1 % there was an error!             ME = MException('NETSTATION:CouldNotSync', ['Could not sync with Netstation to allowable limit of ' exptdesign.syncLimit '.  Please check the IP and connection and try again.\n  Error:' error]);             throw(ME);        end    end    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		INTRO EXPERIMENT%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    % Now horizontally and vertically centered:    drawAndCenterText(w,'Press any key to start experiment...');        % cache the files that are needed    line1files1 = dir(exptdesign.line1files1);    line2files1 = dir(exptdesign.line2files1);    line3files1 = dir(exptdesign.line3files1);    line4files1 = dir(exptdesign.line4files1);    line5files1 = dir(exptdesign.line5files1);    line6files1 = dir(exptdesign.line6files1);        line1files2 = dir(exptdesign.line1files2);    line2files2 = dir(exptdesign.line2files2);    line3files2 = dir(exptdesign.line3files2);    line4files2 = dir(exptdesign.line4files2);    line5files2 = dir(exptdesign.line5files2);    line6files2 = dir(exptdesign.line6files2);        line1files3 = dir(exptdesign.line1files3);    line2files3 = dir(exptdesign.line2files3);    line3files3 = dir(exptdesign.line3files3);    line4files3 = dir(exptdesign.line4files3);    line5files3 = dir(exptdesign.line5files3);    line6files3 = dir(exptdesign.line6files3);        line1files4 = dir(exptdesign.line1files4);    line2files4 = dir(exptdesign.line2files4);    line3files4 = dir(exptdesign.line3files4);    line4files4 = dir(exptdesign.line4files4);    line5files4 = dir(exptdesign.line5files4);    line6files4 = dir(exptdesign.line6files4);        line1files5 = dir(exptdesign.line1files5);    line2files5 = dir(exptdesign.line2files5);    line3files5 = dir(exptdesign.line3files5);    line4files5 = dir(exptdesign.line4files5);    line5files5 = dir(exptdesign.line5files5);    line6files5 = dir(exptdesign.line6files5);        line1files6 = dir(exptdesign.line1files6);    line2files6 = dir(exptdesign.line2files6);    line3files6 = dir(exptdesign.line3files6);    line4files6 = dir(exptdesign.line4files6);    line5files6 = dir(exptdesign.line5files6);    line6files6 = dir(exptdesign.line6files6);         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		SESSIONS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    for sessionNum=1:exptdesign.numSessions               numTrials=exptdesign.numTrialsPerSession;               tic;        drawAndCenterText(w,'Setting up session, please wait...',0);        clear ACCthisblock acc;                %  Load and randomize target images and distractor images        %  TARGETS                    line1images1 = loadimages(exptdesign.imageDirectory, line1files1(1:length(line1files1)));            line2images1 = loadimages(exptdesign.imageDirectory, line2files1(1:length(line2files1)));            line3images1 = loadimages(exptdesign.imageDirectory, line3files1(1:length(line3files1)));            line4images1 = loadimages(exptdesign.imageDirectory, line4files1(1:length(line4files1)));            line5images1 = loadimages(exptdesign.imageDirectory, line5files1(1:length(line5files1)));            line6images1 = loadimages(exptdesign.imageDirectory, line6files1(1:length(line6files1)));                        line1images2 = loadimages(exptdesign.imageDirectory, line1files2(1:length(line1files2)));            line2images2 = loadimages(exptdesign.imageDirectory, line2files2(1:length(line2files2)));            line3images2 = loadimages(exptdesign.imageDirectory, line3files2(1:length(line3files2)));            line4images2 = loadimages(exptdesign.imageDirectory, line4files2(1:length(line4files2)));            line5images2 = loadimages(exptdesign.imageDirectory, line5files2(1:length(line5files2)));            line6images2 = loadimages(exptdesign.imageDirectory, line6files2(1:length(line6files2)));                        line1images3 = loadimages(exptdesign.imageDirectory, line1files3(1:length(line1files3)));            line2images3 = loadimages(exptdesign.imageDirectory, line2files3(1:length(line2files3)));            line3images3 = loadimages(exptdesign.imageDirectory, line3files3(1:length(line3files3)));            line4images3 = loadimages(exptdesign.imageDirectory, line4files3(1:length(line4files3)));            line5images3 = loadimages(exptdesign.imageDirectory, line5files3(1:length(line5files3)));            line6images3 = loadimages(exptdesign.imageDirectory, line6files3(1:length(line6files3)));                        line1images4 = loadimages(exptdesign.imageDirectory, line1files4(1:length(line1files4)));            line2images4 = loadimages(exptdesign.imageDirectory, line2files4(1:length(line2files4)));            line3images4 = loadimages(exptdesign.imageDirectory, line3files4(1:length(line3files4)));            line4images4 = loadimages(exptdesign.imageDirectory, line4files4(1:length(line4files4)));            line5images4 = loadimages(exptdesign.imageDirectory, line5files4(1:length(line5files4)));            line6images4 = loadimages(exptdesign.imageDirectory, line6files4(1:length(line6files4)));                        line1images5 = loadimages(exptdesign.imageDirectory, line1files5(1:length(line1files5)));            line2images5 = loadimages(exptdesign.imageDirectory, line2files5(1:length(line2files5)));            line3images5 = loadimages(exptdesign.imageDirectory, line3files5(1:length(line3files5)));            line4images5 = loadimages(exptdesign.imageDirectory, line4files5(1:length(line4files5)));            line5images5 = loadimages(exptdesign.imageDirectory, line5files5(1:length(line5files5)));            line6images5 = loadimages(exptdesign.imageDirectory, line6files5(1:length(line6files5)));                        line1images6 = loadimages(exptdesign.imageDirectory, line1files6(1:length(line1files6)));            line2images6 = loadimages(exptdesign.imageDirectory, line2files6(1:length(line2files6)));            line3images6 = loadimages(exptdesign.imageDirectory, line3files6(1:length(line3files6)));            line4images6 = loadimages(exptdesign.imageDirectory, line4files6(1:length(line4files6)));            line5images6 = loadimages(exptdesign.imageDirectory, line5files6(1:length(line5files6)));            line6images6 = loadimages(exptdesign.imageDirectory, line6files6(1:length(line6files6)));                                %  Put all the trial types in one vector and permute it        permutation1 = randperm(numTrials);          clear stimulus1typemarker stimulus2typemarker condition line images lineM0 lineM3W line M3B lineM6 lineM3Bwithin lineM6within imagesM3Bwithin imagesM6within imagesM0 imagesM3W imagesM3B imagesM6 imagesSingle stimulus* condition*          clear lineM* images* stimulus* condition                    lineM0   =      [1 1 1 1 2 2 3 3 3 3 4 4 1 1 2 2 2 2 3 3 4 4 4 4 1 1 1 1 2 2 3 3 3 3 4 4 1 1 2 2 2 2 3 3 4 4 4 4]            imagesM0(1,:)=  [1 2 3 4 2 3 1 2 3 4 2 3 2 3 1 2 3 4 2 3 1 2 3 4 1 2 3 4 2 3 1 2 3 4 2 3 2 3 1 2 3 4 2 3 1 2 3 4]            imagesM0(2,:)=imagesM0(1,:);            lineM3W  =      [1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4]            imagesM3W(1,:)= [1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4]            imagesM3W(2,:)= [2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3 2 1 4 3]            lineM3B =       [1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4]            imagesM3B(1,:)= [2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3]            imagesM3B(2,:)= [3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2]            lineM6 =        [1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4]            imagesM6(1,:) = [1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4 1 3 2 4]            imagesM6(2,:) = [3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2]          %  lineSingle =      [1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4]          %  imagesSingle(1,:)=[1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4]          %  imagesSingle(2,:)=[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]                line = cat(2, lineM0, lineM3W, lineM3B, lineM6)            images = cat(2, imagesM0, imagesM3W, imagesM3B, imagesM6)            %make stimulustypemarker            %for second stimulus in each pair of stimuli, be sure to add 20            stimulus1typemarker = cat(2, ones(1,48), ones(1,48)+1, ones(1,48)+2, ones(1,48)+3);            stimulus2typemarker = stimulus1typemarker+20;            condition = stimulus1typemarker;                    %%Now we need 160 trials -->Two permutations            stimulus1typemarkerThisBlock = [stimulus1typemarker(permutation1)];            stimulus2typemarkerThisBlock = [stimulus2typemarker(permutation1)];            conditionThisBlock = [condition(permutation1)];            lineThisBlock =  [line(permutation1)];            imagesThisBlock = [images(:,permutation1)];                    clear allimagefiles;        clear allimages;                allimagefiles(1,1:4,1) = line1files1(1:4,1);        allimagefiles(2,1:4,1) = line2files1(1:4,1);        allimagefiles(3,1:4,1) = line3files1(1:4,1);        allimagefiles(4,1:4,1) = line4files1(1:4,1);        allimagefiles(5,1:4,1) = line5files1(1:4,1);        allimagefiles(6,1:4,1) = line6files1(1:4,1);                  allimagefiles(1,1:4,2) = line1files2(1:4,1);        allimagefiles(2,1:4,2) = line2files2(1:4,1);        allimagefiles(3,1:4,2) = line3files2(1:4,1);        allimagefiles(4,1:4,2) = line4files2(1:4,1);        allimagefiles(5,1:4,2) = line5files2(1:4,1);        allimagefiles(6,1:4,2) = line6files2(1:4,1);                  allimagefiles(1,1:4,3) = line1files3(1:4,1);        allimagefiles(2,1:4,3) = line2files3(1:4,1);        allimagefiles(3,1:4,3) = line3files3(1:4,1);        allimagefiles(4,1:4,3) = line4files3(1:4,1);        allimagefiles(5,1:4,3) = line5files3(1:4,1);        allimagefiles(6,1:4,3) = line6files3(1:4,1);                  allimagefiles(1,1:4,4) = line1files4(1:4,1);        allimagefiles(2,1:4,4) = line2files4(1:4,1);        allimagefiles(3,1:4,4) = line3files4(1:4,1);        allimagefiles(4,1:4,4) = line4files4(1:4,1);        allimagefiles(5,1:4,4) = line5files4(1:4,1);        allimagefiles(6,1:4,4) = line6files4(1:4,1);                  allimagefiles(1,1:4,5) = line1files5(1:4,1);        allimagefiles(2,1:4,5) = line2files5(1:4,1);        allimagefiles(3,1:4,5) = line3files5(1:4,1);        allimagefiles(4,1:4,5) = line4files5(1:4,1);        allimagefiles(5,1:4,5) = line5files5(1:4,1);        allimagefiles(6,1:4,5) = line6files5(1:4,1);                  allimagefiles(1,1:4,6) = line1files6(1:4,1);        allimagefiles(2,1:4,6) = line2files6(1:4,1);        allimagefiles(3,1:4,6) = line3files6(1:4,1);        allimagefiles(4,1:4,6) = line4files6(1:4,1);        allimagefiles(5,1:4,6) = line5files6(1:4,1);        allimagefiles(6,1:4,6) = line6files6(1:4,1);                allimages(1,1:4,:,:,1) = line1images1(1:4,:,:);        allimages(2,1:4,:,:,1) = line2images1(1:4,:,:);        allimages(3,1:4,:,:,1) = line3images1(1:4,:,:);        allimages(4,1:4,:,:,1) = line4images1(1:4,:,:);        allimages(5,1:4,:,:,1) = line5images1(1:4,:,:);        allimages(6,1:4,:,:,1) = line6images1(1:4,:,:);                  allimages(1,1:4,:,:,2) = line1images2(1:4,:,:);        allimages(2,1:4,:,:,2) = line2images2(1:4,:,:);        allimages(3,1:4,:,:,2) = line3images2(1:4,:,:);        allimages(4,1:4,:,:,2) = line4images2(1:4,:,:);        allimages(5,1:4,:,:,2) = line5images2(1:4,:,:);        allimages(6,1:4,:,:,2) = line6images2(1:4,:,:);                  allimages(1,1:4,:,:,3) = line1images3(1:4,:,:);        allimages(2,1:4,:,:,3) = line2images3(1:4,:,:);        allimages(3,1:4,:,:,3) = line3images3(1:4,:,:);        allimages(4,1:4,:,:,3) = line4images3(1:4,:,:);        allimages(5,1:4,:,:,3) = line5images3(1:4,:,:);        allimages(6,1:4,:,:,3) = line6images3(1:4,:,:);                  allimages(1,1:4,:,:,4) = line1images4(1:4,:,:);        allimages(2,1:4,:,:,4) = line2images4(1:4,:,:);        allimages(3,1:4,:,:,4) = line3images4(1:4,:,:);        allimages(4,1:4,:,:,4) = line4images4(1:4,:,:);        allimages(5,1:4,:,:,4) = line5images4(1:4,:,:);        allimages(6,1:4,:,:,4) = line6images4(1:4,:,:);                  allimages(1,1:4,:,:,5) = line1images5(1:4,:,:);        allimages(2,1:4,:,:,5) = line2images5(1:4,:,:);        allimages(3,1:4,:,:,5) = line3images5(1:4,:,:);        allimages(4,1:4,:,:,5) = line4images5(1:4,:,:);        allimages(5,1:4,:,:,5) = line5images5(1:4,:,:);        allimages(6,1:4,:,:,5) = line6images5(1:4,:,:);                  allimages(1,1:4,:,:,6) = line1images6(1:4,:,:);        allimages(2,1:4,:,:,6) = line2images6(1:4,:,:);        allimages(3,1:4,:,:,6) = line3images6(1:4,:,:);        allimages(4,1:4,:,:,6) = line4images6(1:4,:,:);        allimages(5,1:4,:,:,6) = line5images6(1:4,:,:);        allimages(6,1:4,:,:,6) = line6images6(1:4,:,:);                %  FIXATION IMAGE        fixationimage = imread(exptdesign.fixationImage);%         %  BLANK IMAGE        blankimage = imread(exptdesign.blankImage);        size(blankimage)                                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        %		TRIALS        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        %  Set up the output data structure for all trials in this session        trialOutput(sessionNum).sessionNum = sessionNum;        disp('Finished setting up session :');        toc;        drawAndCenterText(w,'Finished setting up session (press key to begin)...');                                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        %       Draw "Press button when you see SOVOR/ZUPUD        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        if exptdesign.responseType==1            drawAndCenterText(w,'INSTRUCTIONS: \n \n View each pair of images. \n Push the left mouse button when images are from the same category. \n Push the right mouse button when images are from different categories.  \n Push any key when you are ready to begin. ');        else            drawAndCenterText(w,'INSTRUCTIONS: \n \n View each pair of images. \n Push the right mouse button when images are from the same category. \n Push the left mouse button when images are from different categories.  \n Push any key when you are ready to begin. ');        end                        %% Tell Netstation to start recording        if exptdesign.netstationPresent            [status error] = NetStation('StartRecording');            if status ==1 % there was an error!                status                error                 ME = MException('NETSTATION:CouldNotRecord', ['Could not tell Netstation to start recording.  Please check the IP and connection and try again.\n  Error:' error]);                 throw(ME);            end            %  Wait for Netstation to Start Recording            WaitSecs(2);        end        %%                drawAndCenterText(w,'Please hold still for 5 seconds...',0);        pause(5)        drawAndCenterText(w,'Press a key to begin',1);        %         if exptdesign.randomizeMaskPresentation % %             useMask = ceil(2* rand(1)) - 1;            %             useMask = mod(sessionNum-1,2);%         end                    %  Go through all trials for this session        for trial=1:numTrials            jitter=randperm(6,1);            %  Choose the SOA interval for this trial            %numSOAs = size(exptdesign.soaDurations,2);            isiDuration = exptdesign.isiDuration;            %soaDuration = exptdesign.soaDurations(ceil(numSOAs*rand(1)));                        %  Make all of the textures and data needed for this trial            %mytext =['Please rate the visibility of the picture just presented.\n \n 1.  I did not see the picture. \n 2. I do not think I saw the picture. \n 3. I think I saw something. \n 4. I saw the picture.'];                        fixationTexture=Screen('MakeTexture', w, double(fixationimage));            blankTexture=Screen('MakeTexture', w, double(blankimage));                                     stimulus1Texture=Screen('MakeTexture', w, squeeze(allimages(lineThisBlock(trial),imagesThisBlock(1,trial),:,:,jitter)));                         stimulus2Texture=Screen('MakeTexture', w, squeeze(allimages(lineThisBlock(trial),imagesThisBlock(2,trial),:,:,jitter)));                                   %  Set up the trial output data            %trialOutput(sessionNum).trials(trial).category = category;            trialOutput(sessionNum).trials(trial).sessionIndex = sessionNum;            trialOutput(sessionNum).trials(trial).trialIndex = trial;            trialOutput(sessionNum).trials(trial).stimulus1typemarker = stimulus1typemarkerThisBlock(trial);            trialOutput(sessionNum).trials(trial).stimulus2typemarker = stimulus2typemarkerThisBlock(trial);            trialOutput(sessionNum).trials(trial).imagefile1 = allimagefiles(lineThisBlock(trial),imagesThisBlock(1,trial),jitter);             trialOutput(sessionNum).trials(trial).imagefile2 = allimagefiles(lineThisBlock(trial),imagesThisBlock(2,trial),jitter);            trialOutput(sessionNum).trials(trial).jitter=jitter;                                  %trialOutput(sessionNum).trials(trial).imagefile2 = allimagefiles(lineThisBlock(trial),imagesThisBlock(2,trial),1);            trialOutput(sessionNum).trials(trial).condition = conditionThisBlock(trial);            trialOutput(sessionNum).trials(trial).line = lineThisBlock(trial);            trialOutput(sessionNum).trials(trial).imagePosition1 = imagesThisBlock(1,trial);            trialOutput(sessionNum).trials(trial).imagePosition2 = imagesThisBlock(2,trial);            trialOutput(sessionNum).trials(trial).trialStartTime=GetSecs;                                        if exptdesign.responseType==1                if stimulus1typemarkerThisBlock(trial) < 3                    trialOutput(sessionNum).trials(trial).correctResponse=1;                 elseif stimulus1typemarkerThisBlock(trial) ==5                    trialOutput(sessionNum).trials(trial).correctResponse=0;                else                    trialOutput(sessionNum).trials(trial).correctResponse=2;                end            else                if stimulus1typemarkerThisBlock(trial) < 3                    trialOutput(sessionNum).trials(trial).correctResponse=2;                 elseif stimulus1typemarkerThisBlock(trial) ==5                    trialOutput(sessionNum).trials(trial).correctResponse=0;                else                    trialOutput(sessionNum).trials(trial).correctResponse=1;                end            end                         % intertrial variation 200-700 ms            interTrialDuration = (ceil(500* rand(1)) + 200) / 1000;                       %  Fixation display            Screen('DrawTexture', w, fixationTexture);            Screen('FillRect',w,black,[0 0 32 32]);  % This is the stimulus marker block for the photodiode                        [FixationVBLTimestamp FixationOnsetTime FixationFlipTimestamp FixationMissed] = Screen('Flip',w);%             WaitSecs(exptdesign.fixationDuration);            Screen('DrawTexture', w, blankTexture);            Screen('FillRect',w,black,[0 0 32 32]);  % This is the stimulus marker block for the photodiode                                    [InterTrialBlankVBLTimestamp InterTrialBlankOnsetTime InterTrialBlankFlipTimestamp InterTrialBlankMissed] = Screen('Flip',w,FixationVBLTimestamp + exptdesign.fixationDuration - slack);                       %  Stimulus display            Screen('DrawTexture', w, stimulus1Texture);            Screen('FillRect',w,white,[0 0 32 32]);  % This is the stimulus marker block for the photodiode            [Stimulus1VBLTimestamp Stimulus1OnsetTime Stimulus1FlipTimestamp Stimulus1Missed] = Screen('Flip',w,InterTrialBlankVBLTimestamp+interTrialDuration - slack);                        %  Blank display for the SOA interval            Screen('DrawTexture', w, blankTexture);            Screen('FillRect',w,black,[0 0 32 32]);  % This is the stimulus marker block for the photodiode                        [Blank1VBLTimestamp Blank1OnsetTime Blank1FlipTimestamp Blank1Missed] = Screen('Flip',w,Stimulus1VBLTimestamp+exptdesign.stimulusDuration-slack);            % Stimulus 2            Screen('DrawTexture', w, stimulus2Texture);            Screen('FillRect',w,white,[0 0 32 32]);  % This is the stimulus marker block for the photodiode            [Stimulus2VBLTimestamp Stimulus2OnsetTime Stimulus2FlipTimestamp Stimulus2Missed] = Screen('Flip',w,Blank1VBLTimestamp+isiDuration - slack);            AnimalResponseStartTime = GetSecs;%             if exptdesign.netstationPresent%                 Netstation('Event');%             end                        Screen('DrawTexture', w, blankTexture);            Screen('FillRect',w,black,[0 0 32 32]);  % This is the stimulus marker block for the photodiode                         [Blank2VBLTimestamp Blank2OnsetTime Blank2FlipTimestamp Blank2Missed] = Screen('Flip',w,Stimulus2VBLTimestamp+exptdesign.stimulusDuration-slack);                                      if exptdesign.waitForResponse                numericalanswer = getAnimalResponseMouseWait();            else                numericalanswer = getAnimalResponseMouse(exptdesign.responseDuration);            end            AnimalResponseFinishedTime = GetSecs;%             disp(['Translated animal response keyboard input to ' num2str(numericalanswer)]);            trialOutput(sessionNum).trials(trial).subjectAnimalResponse = numericalanswer;             %  Record the end time for the trial            trialOutput(sessionNum).trials(trial).trialEndTime= GetSecs;                                    %% Send trial specific events to Netstation for recording (if present)            if exptdesign.netstationPresent                trialDuration = trialOutput(sessionNum).trials(trial).trialStartTime - trialOutput(sessionNum).trials(trial).trialEndTime;                if  trialOutput(sessionNum).trials(trial).correctResponse == 1%                     Netstation('Event','STIM',trialOutput(sessionNum).trials(trial).trialStartTime,0.001,'sess',num2str(sessionNum), 'tria',num2str(trial),'soad',num2str(soaDuration));                    NetStation('Event','SAME',GetSecs,0.001,'sess',sessionNum, 'tria',trial,'cond',conditionThisBlock(trial), 'resp', numericalanswer, 'line', lineThisBlock(trial));                else                    NetStation('Event','DIFF',GetSecs,0.001,'sess',sessionNum, 'tria',trial,'cond',conditionThisBlock(trial), 'resp', numericalanswer, 'line', lineThisBlock(trial));                end            end            %%                        %  Record whether the subject got the right answer            trialOutput(sessionNum).trials(trial).subjectHasRightAnswer = trialOutput(sessionNum).trials(trial).correctResponse == trialOutput(sessionNum).trials(trial).subjectAnimalResponse;            ACCthisblock(trial)=trialOutput(sessionNum).trials(trial).correctResponse == trialOutput(sessionNum).trials(trial).subjectAnimalResponse;            %  Record the filenames used for stimulus and masks            %%%%%%%%trialOutput(sessionNum).trials(trial).stimulus1ImageFile = allimagefiles1(trial).name;            %%%%%%%%trialOutput(sessionNum).trials(trial).stimulus2ImageFile = allimagefiles2(trial).name;%            trialOutput(sessionNum).trials(trial).maskImageFile = maskimagefiles(trial).name;%            trialOutput(sessionNum).trials(trial).maskUsed = useMask;                                   %  Record the SOA interval for this time            trialOutput(sessionNum).trials(trial).isiDuration = isiDuration;                        % Calculate and record trial timing            trialOutput(sessionNum).trials(trial).fixationOnset = FixationOnsetTime;            trialOutput(sessionNum).trials(trial).fixationDuration = InterTrialBlankVBLTimestamp - FixationOnsetTime;  % record the actual time on screen (just to be accurate)                       trialOutput(sessionNum).trials(trial).stimulus1Onset = Stimulus1OnsetTime;            trialOutput(sessionNum).trials(trial).stimulus1Duration = Blank1VBLTimestamp - Stimulus1OnsetTime;  % record the actual time on screen (just to be accurate)                        trialOutput(sessionNum).trials(trial).blank1Onset = Blank1OnsetTime;                        trialOutput(sessionNum).trials(trial).stimulus2Onset = Stimulus2OnsetTime;            trialOutput(sessionNum).trials(trial).stimulus2Duration = Blank2VBLTimestamp - Stimulus2OnsetTime;  % record the actual time on screen (just to be accurate)                        trialOutput(sessionNum).trials(trial).blank2Onset = Blank2OnsetTime;%            trialOutput(sessionNum).trials(trial).blankDuration = MaskVBLTimestamp - BlankOnsetTime;  % record the actual time the blank was on the screen (just to be accurate)            %            trialOutput(sessionNum).trials(trial).maskOnset = MaskOnsetTime;%            trialOutput(sessionNum).trials(trial).maskDuration = BlankResponseVBLTimestamp - MaskOnsetTime;  % record the actual time the blank was on the screen (just to be accurate)                        trialOutput(sessionNum).trials(trial).animalResponseStart = AnimalResponseStartTime;            trialOutput(sessionNum).trials(trial).animalResponseFinished = AnimalResponseFinishedTime;  % record the actual time the blank was on the screen (just to be accurate)                        trialOutput(sessionNum).trials(trial).fixationMissed = FixationMissed;            trialOutput(sessionNum).trials(trial).stimulus1Missed = Stimulus1Missed;            trialOutput(sessionNum).trials(trial).blank1Missed = Blank1Missed;            trialOutput(sessionNum).trials(trial).stimulus2Missed = Stimulus2Missed;            trialOutput(sessionNum).trials(trial).blank2Missed = Blank2Missed;            trialOutput(sessionNum).trials(trial).badTrial = ( FixationMissed > 0) |( Stimulus1Missed > 0) | ( Blank1Missed > 0) | ( Blank2Missed > 0) | (Stimulus2Missed);                        trialOutput(sessionNum).trials(trial).interTrialDuration = interTrialDuration;                            %  Close all open textures            Screen('Close', fixationTexture);            Screen('Close', stimulus1Texture);            Screen('Close', stimulus2Texture);            Screen('Close', blankTexture);                                if mod(trial, 49)==0                drawAndCenterText(w, 'Please take a quick blink break, press any key to continue.',1);            end                                end                drawAndCenterText(w,'Please hold still for 5 seconds...',0);        pause(5)                %% stop netstation run        if exptdesign.netstationPresent            %  Tell Netstation to Stop Recording            [status error] = NetStation('StopRecording');            if status ==1 % there was an error!                status                 error                 ME = MException('NETSTATION:CouldNotStopRecording', ['Could not tell Netstation to stop recording.  Please check the IP and connection and try again.\n  Error:' error]);                 throw(ME);            end        end        %%                %  Write the trial specific data to the output file.        tic;        save([subjectName '.' num2str(sessionNum)'.' num2str(trial) '.mat'],'trialOutput','exptdesign');        toc;        %  Display a short break message        acc=sum(ACCthisblock)./length(ACCthisblock);        if ( sessionNum < exptdesign.numSessions)            drawAndCenterText(w,['End of Block #' num2str(sessionNum) '.\n\n You got ' num2str(acc.*100) '% correct. \n\n Please take a short break.\n  Then press any key to continue.']);        else            drawAndCenterText(w,['End of Block #' num2str(sessionNum) '.\n\n Thank you for participating!\n  Press any key to end the experiment.']);        end                end        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		END%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    % End of demo, close window:    Screen('CloseAll');    Priority(0);    % At the end of your code, it is a good idea to restore the old level.%     Screen('Preference','SuppressAllWarnings',oldEnableFlag);        catch    % This "catch" section executes in case of an error in the "try"    % section []     if exptdesign.netstationPresent        % Tell Netstation to stop recording        [status error] = NetStation('StopRecording');        if status ==1 % there was an error!            status             error             ME = MException('NETSTATION:CouldNotStopRecord', ['Could not tell Netstation to stop recording.  Please check the IP and connection and try again.\n  Error:' error]);%              throw(ME);            disp('ERROR stopping recoring in Netstation!');        end                [status error] = NetStation('Disconnect');        if status ==1 % there was an error!            status             error             ME = MException('NETSTATION:CouldNotStopRecord', ['Could not tell Netstation to stop recording.  Please check the IP and connection and try again.\n  Error:' error]);%              throw(ME);            disp('ERROR disconnecting from Netstation!');        end    end    % above.  Importantly, it closes the onscreen window if it's open.    disp('Caught error and closing experiment nicely....');    Screen('CloseAll');    Priority(0);    fclose('all');    psychrethrow(psychlasterror);end						end%% Subfunctionsfunction [images] = loadimages(directory,filenames)     total = size(filenames,1);    for i=1:total        [value map] = imread([directory, filenames(i).name],'JPG');        images(i,:,:) = value(:,:);    endendfunction drawAndCenterText(window,message,wait)    if nargin < 3        wait = 1;    end        % Now horizontally and vertically centered:    [nx, ny, bbox] = DrawFormattedText(window, message, 'center', 'center', 0);    black = BlackIndex(window); % pixel value for black        Screen('FillRect',window,black,[0 0 32 32]);  % This is the stimulus marker block for the photodiode                    Screen('Flip',window);%     KbWait;%     while KbCheck; end;    if wait        KbPressWait    endendfunction numericalanswer = getAnimalResponseMouseWait()       [x,y,buttons] = GetMouse();       while (~any(buttons))           [x,y,buttons] = GetMouse();       end       if buttons(1)           numericalanswer = 1;       elseif buttons(3)           numericalanswer = 2;       else           numericalanswer = 0;       endendfunction numericalanswer = getAnimalResponseMouse(waitTime)  %Wait for a response  numericalanswer = -1;  mousePressed = 0;  startWaiting=GetSecs;  while GetSecs-startWaiting < waitTime && mousePressed == 0      %check to see if a button is pressed       [x,y,buttons] = GetMouse();       if (~buttons(1) && ~buttons(3))           continue;       else           if buttons(1)               numericalanswer = 1;           elseif buttons(3)               numericalanswer = 2;           else               numericalanswer = 0;           end          if numericalanswer ~= -1              %stop checking for a button press              mousePressed = 1;          end       end  end  if numericalanswer == -1      numericalanswer =0;  endend