%%
clear all;

s1 = load('Users/courtney/Documents/MATLAB/915s1_f.mat');
s2 = load('Users/courtney/Documents/MATLAB/915s2_f.mat');
s3 = load('Users/courtney/Documents/MATLAB/915s3_f.mat');
s4 = load('/Users/courtney/Documents/MATLAB/915s4_f.mat');
s5 = load('/Users/courtney/Documents/MATLAB/915s5_f.mat');
s6 = load('/Users/courtney/Documents/MATLAB/915s6_f.mat');
s7 = load('/Users/courtney/Documents/MATLAB/915s7_f.mat');

%%
%unPaired ttest comparing each mean accuracy across session 1-3 for cat
%proto morphs
tAccF1 = (sum(s1.accF1) + sum(s4.accF1) + sum(s7.accF1))/...
         (length(s1.accF1) + length(s4.accF1) + length(s7.accF1)); 

tAccF2 = (sum(s1.accF2) + sum(s2.accF2) + sum(s4.accF2) + sum(s7.accF2))/...
         (length(s1.accF2) + length(s2.accF2) + length(s4.accF2) + length(s7.accF2));
     
tAccF3 = (sum(s1.accF3) + sum(s4.accF3) + sum(s7.accF3))/...
         (length(s1.accF3) + length(s4.accF3) + length(s7.accF3));

tAccF4 = (sum(s1.accF4) + sum(s2.accF4) + sum(s4.accF4) + sum(s7.accF4))/...
         (length(s1.accF4) + length(s2.accF4) + length(s4.accF4) + length(s7.accF4));
     
tAccF5 = (sum(s1.accF5) + sum(s4.accF5) + sum(s7.accF5))/...
         (length(s1.accF5) + length(s4.accF5) + length(s7.accF5));

tAccF6 = (sum(s2.accF6) + sum(s3.accF6) + sum(s4.accF6) + sum(s5.accF6) + sum(s6.accF6) + sum(s7.accF6))/...
         (length(s2.accF6) + length(s3.accF6) + length(s4.accF6) + length(s5.accF6) + length(s6.accF6) + length(s7.accF6));

tAccF7 = (sum(s1.accF7) + sum(s3.accF7) + sum(s4.accF7) + sum(s5.accF7) + sum(s6.accF7) + sum(s7.accF7))/...
         (length(s1.accF7) + length(s3.accF7) + length(s4.accF7) + length(s5.accF7) + length(s6.accF7) + length(s7.accF7));

tAccF8 = (sum(s2.accF8) + sum(s3.accF8) + sum(s4.accF8) + sum(s5.accF8) + sum(s6.accF8) + sum(s7.accF8))/...
         (length(s2.accF8) + length(s3.accF8) + length(s4.accF8) + length(s5.accF8) + length(s6.accF8) + length(s7.accF8));

tAccF9 = (sum(s1.accF9) + sum(s3.accF9) + sum(s4.accF9) + sum(s5.accF9) + sum(s6.accF9) + sum(s7.accF9))/...
         (length(s1.accF9) + length(s3.accF9) + length(s4.accF9) + length(s5.accF9) + length(s6.accF9) + length(s7.accF9));
     
%%
% [h, p.pF1Acc(1,1)] = ttest2(s1.accF1, s4.accF1);
% [h, p.pF1Acc(2,1)] = ttest2(s4.accF1, s7.accF1);
% [h, p.pF1Acc(3,1)] = ttest2(s1.accF1, s7.accF1);
% 
% %converting obtained p values into strings
% text={['p=' num2str(p.pF1Acc(1,1))],...
%       ['p=' num2str(p.pF1Acc(2,1))],...
%       ['p=' num2str(p.pF1Acc(3,1))],...
%       };

%graphing
map = [1 1 1; .6 .6 .6;1 1 1; .6 .6 .6;1 1 1; .6 .6 .6;1 1 1; .6 .6 .6;1 1 1];
values = [tAccF1 tAccF2 tAccF3 tAccF4 tAccF5 tAccF6 tAccF7 tAccF8 tAccF9];
errors = [std(tAccF1)/sqrt(length(tAccF1))...
          std(tAccF2)/sqrt(length(tAccF2))...
          std(tAccF3)/sqrt(length(tAccF3))...
          std(tAccF4)/sqrt(length(tAccF4))...
          std(tAccF5)/sqrt(length(tAccF5))...
          std(tAccF6)/sqrt(length(tAccF6))...
          std(tAccF7)/sqrt(length(tAccF7))...
          std(tAccF8)/sqrt(length(tAccF8))...
          std(tAccF9)/sqrt(length(tAccF9))...
         ];

      
h = barweb(values, errors, 1, 'Freq 1 Freq 2 Freq 3 Freq 4 Freq 5 Freq 6 Freq 7 Freq 8 Freq 9' , 'Accuracy by Freq Pair', [], 'Accuracy', map, [],...
    [], 2, [], 'northWest')
%barwebpairs_positive(h, [], {[1 2; 2 3;1 3 ], []}, '-', text)

